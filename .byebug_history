exit
created_user.invitation_token
created_user.invitation
created_user.invitation_token
@response.cookies
@response.cookie_jars
@response.body
response
created_user
exit
register e
    let(:password) { Faker::Internet.password(min_length: 12) }
puts @response.body
@response.body
@response
register user
response
response = register user
Decidim::User.last
register user
user = Decidim::User.new(
          email: "test@example.com",
          nickname: "itsatests",
          name: "John doe",
        )
user.nickname
password
Decidim::User.last
register user
 def register(user)
      register_path = Decidim::Core::Engine.routes.url_helpers.user_registration_path
      payload = {
          tos_agreement: "1",
          email: user.email,
          name: user.name,
          password: password,
          password_confirmation: password,
          nickname: user.nickname,
          newsletter: "0", organization_id: organization.id
          }
      post(
        register_path,
        params: { user: payload, },
        headers: headers
      )
    end
register user
    def register(user)
      register_path = Decidim::Core::Engine.routes.url_helpers.user_registration_path
      payload = {
          tos_agreement: "1",
          email: user.email,
          name: user.name,
          password: password,
          password_confirmation: password,
          nickname: user.nickname,
          newsletter: "0", organization_id: organization.id
          }
      post(
        register_path,
        params: { user: payload, }
      )
    end
created_user
exit
Decidim::User.count
Decidim::User.last
register user
    def register(user)
      register_path = Decidim::Core::Engine.routes.url_helpers.user_registration_path
      payload = {
          tos_agreement: "1",
          email: user.email,
          name: user.name,
          password: "testtest",
          password_confirmation: "testtest",
          nickname: user.nickname,
          newsletter: "0", organization_id: organization.id
          }
      post(
        register_path,
        params: { user: payload, }
      )
    end
Decidim::User.last
Decidim::User
register user
Decidim::User.last
register user
    def register(user)
      register_path = Decidim::Core::Engine.routes.url_helpers.user_registration_path
      payload = {
          tos_agreement: "1",
          email: user.email,
          name: user.name,
          password: "testtest",
          password_confirmation: "testtest",
          nickname: user.nickname,
          newsletter: "0",
          }
      post(
        register_path,
        { params: { user: payload }, as: :json,
        headers: { "HOST" => organization.host } }
      )
    end
%x(bundle show rails)
bundle show rails
Decidim::User.last
register user
 def register(user)
      register_path = Decidim::Core::Engine.routes.url_helpers.user_registration_path
      payload = {
          tos_agreement: "1",
          email: user.email,
          name: user.name,
          password: "testtest",
          password_confirmation: "testtest",
          nickname: user.nickname,
          newsletter: "0",
          }
      post(
        register_path,
        { params: { user: payload }, as: :html,
        headers: { "HOST" => organization.host } }
      )
    end
register user
  def register(user)
      register_path = Decidim::Core::Engine.routes.url_helpers.user_registration_path
      payload = {
          tos_agreement: "1",
          email: user.email,
          name: user.name,
          password: "testtest",
          password_confirmation: "testtest",
          nickname: user.nickname,
          newsletter: "0",
          }
      post(
        register_path,
        { params: { user: payload }, as: :json,
        headers: { "HOST" => organization.host } }
      )
    end
register user
  def register(user)
      register_path = Decidim::Core::Engine.routes.url_helpers.user_registration_path
      payload = {
          tos_agreement: "1",
          email: user.email,
          name: user.name,
          password: "testtest",
          password_confirmation: "testtest",
          nickname: user.nickname,
          newsletter: "0",
          }
      post(
        register_path,
        { params: {}, body: { user: payload }.to_json, as: :json,
        headers: { "HOST" => organization.host } }
      )
    end
register user
def register(user)
      register_path = Decidim::Core::Engine.routes.url_helpers.user_registration_path
      payload = {
          tos_agreement: "1",
          email: user.email,
          name: user.name,
          password: "testtest",
          password_confirmation: "testtest",
          nickname: user.nickname,
          newsletter: "0",
          }
      post(
        register_path,
        { params: { user: payload }.to_json, format: :json,
        headers: { "HOST" => organization.host } }
      )
    end
register user
def register(user)
      register_path = Decidim::Core::Engine.routes.url_helpers.user_registration_path
      payload = {
          tos_agreement: "1",
          email: user.email,
          name: user.name,
          password: "testtest",
          password_confirmation: "testtest",
          nickname: user.nickname,
          newsletter: "0",
          }
      post(
        register_path,
        { params: { user: payload }.to_json, format: :json,
        headers: { "HOST" => organization.host } }
      )
    end
register user
   def register(user)
      register_path = Decidim::Core::Engine.routes.url_helpers.user_registration_path
      payload = {
          tos_agreement: "1",
          email: user.email,
          name: user.name,
          password: "testtest",
          password_confirmation: "testtest",
          nickname: user.nickname,
          newsletter: "0",
          }
      post(
        register_path,
        { user: payload }.to_json
      )
    end
register user
    def register(user)
      register_path = Decidim::Core::Engine.routes.url_helpers.user_registration_path
      payload = {
          tos_agreement: "1",
          email: user.email,
          name: user.name,
          password: "testtest",
          password_confirmation: "testtest",
          nickname: user.nickname,
          newsletter: "0",
          }
      post(
        register_path,
        { body: { user: payload }.to_json,
        headers: { "HOST" => organization.host, "CONTENT-TYPE": "application/json" } }
      )
    end
Decidim::User.last
exit
Decidim::User.count
Decidim::User
register user
 def register(user)
      register_path = Decidim::Core::Engine.routes.url_helpers.user_registration_path
      payload = {
          tos_agreement: "1",
          email: user.email,
          name: user.name,
          password: "testtest",
          password_confirmation: "testtest",
          nickname: user.nickname,
          newsletter: "0",
          }
      post(
        register_path,
        { params: { user: payload, utf: "âœ“" },
        headers: headers }
      )
    end
